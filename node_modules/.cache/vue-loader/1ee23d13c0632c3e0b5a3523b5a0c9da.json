{"remainingRequest":"/Users/makoto/Documents/Projekty/web/makoto-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/makoto/Documents/Projekty/web/makoto-web/src/views/Privacy.vue?vue&type=template&id=30c91384&scoped=true&","dependencies":[{"path":"/Users/makoto/Documents/Projekty/web/makoto-web/src/views/Privacy.vue","mtime":1593888702998},{"path":"/Users/makoto/Documents/Projekty/web/makoto-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/makoto/Documents/Projekty/web/makoto-web/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/makoto/Documents/Projekty/web/makoto-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/makoto/Documents/Projekty/web/makoto-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}